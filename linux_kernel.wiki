== module ==
=== insmod ===
=== rmmod ===
=== lsmod ===
=== modprobe ===
=== modinfo ===

== panic ==
print_tainted - return a string to represent the kernel taint state.

- 'O' - Out-of-tree module has been loaded.
- 'D' - Kernel has oopsed before
- 'W' - Taint on warning.
- 'P' - Proprietary module has been loaded.

- 'F' - Module has been forcibly loaded.
- 'S' - SMP with CPUs not designed for SMP.
- 'R' - User forced a module unload.
- 'M' - System experienced a machine check exception.
- 'B' - System has hit bad_page.
- 'U' - Userspace-defined naughtiness.
- 'A' - ACPI table overridden.
- 'C' - modules from drivers/staging are loaded.
- 'I' - Working around severe firmware bug.
- 'E' - Unsigned module has been loaded.

The string is overwritten by the next call to print_tainted().

=== trigger crash ===
`echo c > /proc/sysrq-trigger`

system will directly panic

=== decodecode ===
script to help debug

find "Code :" string from STDIN, then disassmble it.

== dtb ==
device tree blob

description of hardware.

bootloader load two binaries:
# kernel image
# DTB

DTB is compiled from dts file (device tree source).

bootloader pass DTB address through *r2* register.

=== DTS syntax ===

=== compile ===
- DTS file, board-level definitions
- DTSI file, SoC-level definitions
DTS file could merge / overlay the tree of the including file over the tree of the
included file

DTS go through C preprocessor, use `#include` style.

scripts/dtc (device tree compiler)

DTB, compiled file.

== kworker ==

"kworker" is a placeholder process for kernel worker threads, which perform
most of the actual processing for the kernel, especially in cases where there
are interrupts, timers, I/O, etc.


```
echo l > /proc/sysrq-trigger
dmesg | tail -n 100
```

to find out what use so may CPU.
