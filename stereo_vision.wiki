= 立体视觉对应 =

2013-11-04

== BitPlaneNLF ==
bit-plane slicing

ref:[[https://docs.google.com/file/d/0B-AwPgShY96xbzZOQ3pONmJpalk/edit]]

=== bitplane ===
位平面

就是取每个pixel的对应bit构建出图像.

bitplane pyramid
----
opencv提供了两个算法,计算密集距离图匹配.



----
ref:计算机视觉--算法与应用(第11章 立体视觉对应)

立体视觉重建方法,用于根据两幅不同视角的图像,恢复出深度图.或者构建出3D模型.

== 极线几何学 ==

# 矫正/卷绕rectify输入图像

== 稠密对应 ==
一般立体视觉匹配算法进行下面4个步骤:
# 匹配代价计算cost
# 代价聚集aggregation
# 视差计算和优化
# 视差求精
`作为人脸的应用,只要计算到代价聚集这一步似乎就够了`

对于 _局部方法_:


局部方法和全局方法的区别??

----
ref:图像工程 章毓晋

双目成像存在多种模式:
# 双目横向模式
    # 角度扫描系统`朱老师要做的180度扫描,以及目前的全景图片的自动生成都是基于此`
# 双目横向汇聚模式
# 双目纵向模式

== 基于局域的双目立体匹配 ==
`这里好像就是简单的区域匹配...`
----
流行的很多论文方法的考虑,请参考[[realtimeHD]]
----

~关于立体视觉一个基本的介绍~

[[http://media.cs.tsinghua.edu.cn/~ahz/digitalimageprocess/chapter19/chapt19_ahz.htm#b1]]

这个资料,好像过老了,已经失去参考价值了.

这里的介绍,还是基于稀疏对应的方法,就是提取各种特征点,然后对其匹配.现在流行的方法,都是密集对应的方法,就是对全图像进行匹配.
