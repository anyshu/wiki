= Android =

* [[bionic]]

* [[media_framework]]

* [[arm_hardware]]

== tools ==
=== am ===
start apk in command line
- start -n [APK_name]

=== pm ===
- list
    - packages      list installed packages
    - features
    - users
    - libraries
- uninstall

=== adb ===
* select device

- connect
- disconnect
- devices
adb -s [DeviceID] ...

- install
    - -r            reinstall
- uninstall
    - -k            keep data and cache
- remount           remount /system, /vendor
- reboot            reboot
- shell
- logcat

- push
    when push directory, it will push all file under that directory to board
- pull

==== issue ====
- device offline
reconfigure MAC Addr, and re-dhcp, then retry.

If misspell IP addr, or not align version of adb between server and client,
   may get this problem.

- cannot copy
adb -s [DevicesID] root

- read-only filesystem
adb -s [DevicesID] remount

or check `df` or `mount` first

=== android ===
NOTE:
this is development tool, not other things.

development tool
- create, delete, view Android Virtual Devices(*AVD* s)
- create, update Android projects
- update Android SDK with new platforms, add-ons, and documents.

=== systrace ===
==== flow ====
capturing data
- check exist of `sys/kernel/debug/tracing`, then
{{{
echo 32768 /sys/kernel/debug/tracing/per/cpu/cpu*/buffer_size_kb
echo 1 > sys/kernel/debug/tracing/tracing_on
}}}
to enable tracing mode.
- Android kernel such as CPU scheduler (from `/proc/cpuinfo`), kernal and disk
activity
- application threads

then write log to HTML template, to get result display.

==== enable tracing ====
- connected through USB, and _enable USB for debugging_.
- linux kernel need support _TRACE_ mode.

Command Line::
start / stop command

GUI::
Settings > Developer Options > Monitoring > Enable traces

select categories of processes to be traced and click OK.

=== netcfg ===
- ifconfig [networkname]

such as: tiwlan0, eth0, lo

* netcfg [<interface> {dhcp|up|down}]

- ip addr

== studio ==
=== fetch fail ===
add this line to idea.properties

`disable.android.first.run=true`

== AOSP ==
Andorid Open-Source Project
