== ld ==
linker
== as ==
assembler

== addr2line ==

addr2line -f [PC pinter] -e [filename]
== ar ==
creating, modifying, extracting from archives.

== c++filt ==
filter to demangle encode C++ symbols

== ddltool ==
creates files for building and uinsg DDLs.

== gold ==
a new, faster ELF only linker. beta.

== gprof ==
display profiling information
gprof,profile工具,非常有用.值得学习.

之间测试用过,现在又忘了.

# 编译时候加入-pg参数,以支持profile.
# 直接运行,运行的结果有gmon.out文件
# gprof [exename] gmon.out -p
    - 输出运行时间(注意,没有使用-pg进行编译的,这里不会有输出)
# gprof [exename] gmon.out -q
    - c输出,调用逻辑层级

*但是,gprof对于多线程程序的调试,支持比较麻烦,好像不是很好.*
=== __gnu_mcount_nc ===
When compile with GCC and passing -pg flags, compiler inserts a call to the
function __gnu_mcount_nc at the start of every function. Normally you link with
-pg, the implementation of this function is linked into your program or shared
library.

The *Android* platform doesn't provide an implenation of __gnu_mcount_nc, and
it also lacks the C library calls necessary for profiling.

This library implements __gnu_mcount_nc in a few lines of thumb code that
extract the required function address from the stack and call c C profiling
function.

The C profiling code is derived from gprof, so this library has to be licenced
GPLv2+.


== nlmconv ==
converts object code into an NLM.

== nm ==
lists symbols form objects files

== objcopy ==
copies and translates object files.

== objdump ==
display information from object files.
- -S        source
- -D        disassemble-all

== ranlib ==
generates an index to the contents of an archive.

== readelf ==
display information from any ELF format object file.

== size ==
list the section size of an object or an archive file.

== strings ==
lists printable strings from files.

== strip ==
discards symbols

== windmc ==
a Windows compatible message compiler.

== windres ==
a compiler for Window resources files.

== gcov ==
coverage test tool

# using gcc with -fprofile-arcs -ftest-coverage
# run it, get *.gcda file
# gcov [option] sourcefilename, generate sourcefilename.gcov

based on sourcefilename.gcov, get coverage test info

=== option ===
# -a, --all-blocks (otherwise, only output "main" block info)
# -b, --branch-probabilities
# -c, --branch-counts (default on)
