=bash与linux小软件=
mtime:2012-09-23 23:01:23 

==bash==
变量名的设置

1、 变量与变量的内容以等号“=”连接；
*2、 等号两边不能够直接接空格符；*
3、 变量名称只能是英文字母与数字，但数字不能是开头字符；
4、 若有空格符，可以使用双引号或单引号将变量内容结合起来，但要特别注意，双引号内的特殊字符可以保持变量特性，但单引号内的特殊字符则仅为一般字符；
5、 必要时需要以转义字符“\”将特殊字符变成一般字符；
6、 在一串命令中，还需要通过其他命令提供的信息，可以使用这样的方式“`command`”（请特别注意，`是键盘上方的数字键1左边的那个按键，而不是单引号。其外，这个符号之内的命令会先执行，其执行出来的结果将作为外部输入信息。（例：ls –l `locate crontab` 先locate文件名数据，再用ls命令处理））。
7、 若变量为扩展变量内容，需以双引号及$变量名称，如“”$PATH”:/home”继续累加内容；
8、 若该变量需要在其他子程序中执行，则需要用export使变量变成环境变量（变量分为local变量和env变量，只有env变量才具有遗传性，但是子进程中的无论是local还是env都会随着子程序的消失而消失，而且父进程是无法使用其变量的）；
9、 通常大写字母为系统默认变量，自行设置变量可以使用小写字母，便于判断（根据用户兴趣与喜好）；
10、取消变量的方法为：“unset 变量名称”。

==mv==
增加后缀
{{{
	mv file{,.suffix}
}}}

-f	强制覆盖

但是偶尔发现该命令没有作用,仍然回提醒是否覆盖,这是因为系统中alias cp=cp -i,也就是总是带着-i参数,这个参数总是回提醒覆盖

因此可以通过使用\cp,也就是原始的cp命令,这样就可以使得-f参数生效

==定位文件位置==
- updatedb+locate
	寻找系统内任意文件的位置.
- where/which
	寻找可执行文件的位置.
	
== 文件分割与合并 ==
分割使用split,可以具体指明split -l 函数 文件 新文件前缀

或者split -b 10m/2g 文件...

split -b 188 a.ts

合并

cat smallfile* > file

== 统计文件个数 ==
ls -l | grep "^-" | wc -l

对于中文,使用-m参数.这样才可以正确统计字符个数.默认最后的那个是字节个数

== man ==
- -a        all
- -k        keyword, just list the manual page
- -t        to, reference to the keyword
- -f        from, reference from the keyword page

=== mandb ===
update db of manual page
