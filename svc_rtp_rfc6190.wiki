=RFC6190阅读=
{{{
rfc6190
2012-06-19 08:49:37

RTP payload format for scalable video coding
摘要
这份备忘描述了对于ITU-T H.264建议书的附录G定义的SVC编码的RTP装载格式.同时该编码技术上也是ISO/IEC国际标准14496-10的修订3.
RTP装载格式允许每个RTP包载荷可以使一个或者多个NALu.同时也允许NALu分段在不同的RTP包中.进一步的,它支持SVC流传输在一个或者多个RTP会话上.
载荷格式定义为新的"H264-SVC"媒体子类型名称.但是一样前向兼容于RTC6184,因为基础层封装在自己的RTP流中,同时必须使用"H264"作为媒体子类型名称,其封装方式见于RFC6184.
这个载荷格式广泛用于视频会议,网络视频流化,高比特率娱乐级视频.

1,介绍
1.1SVC编码器
1.2载荷格式综述
2,约定
3,缩写定义
4,RTP载荷格式
5,打包规则
6,解包规则
7,载荷格式参数
8,安全事项
9,拥塞控制
10,IANA事项
11,附录:应用示例
12,ack
13,引用

1介绍
本备忘录使得RTP[RTP3550]载荷格式用于H.264/AVC视频编码标准的SVC扩展.SVC也是ISO/IEC 14496-10标准的修订3.同时是ITU-T建议书H.264的附录G.在本备忘汇总,H.264/AVC指H.264标准除了附录G的其他部分.

SVC覆盖了H.264AVC的全部应用范围,从低比特率的移动应用到搞分辨率的电视HDTV广播,甚至数字影院需要的近乎无损的编码和每秒百兆的传输速率.SVC添加到H.264/AVC的可伸缩特性,使得多个关系到系统能力的系统级功能可以使用不同的系统状态,同时没有额外的处理和最小化的处理.自适应同时关系到潜在的异种接收端的能力(不同的屏幕分辨率,处理速度等等)以及不同或者时变的网络状态.这种自适应可以执行在源端,目标端或者中间媒介的MANEs.本备忘指明的载荷格式揭示了系统级功能,从而系统设计者可以直接采用这些特性的优点.
     备注:
     因为SVC流包含一个兼容于H.264AVC的子流,需要使用MANE过滤这个流使得所有的SVC特性信息去除.本备忘事实上在7.2节中,定义了媒体类型参数sprop-avc-ready指明是否可以通过消除RTP包,重写RTCP协议使得其匹配RFC3550的第7节指定的RTP数据包流,转换为兼容的RFC6184的流,

本备忘定义了两个基本的用于SVC数据传输的模型,单会话传输SST和多会话传输MST.在SST中,单个RTP会话用于传输包含在一个SVC比特流中的所有的伸缩层.在MST中,伸缩层传输在不同的RTP会话中.在SST中,打包直接扩展了RFC6184,MST定义了4个不同的模式.区分在于是否允许交错,例如出书NALu不同于解码顺序.同时技术上使用会话内NALu解码顺序恢复技术.解码顺序恢复可以使得会话内的时间戳[RFC3550]对齐,或者跨会话的解码书序号(CS-DON).一个MST模型同时支持解码顺序恢复技术,这样接收端就可以选择他们倾向的技术,更多细节在1.2.2节.

被备忘进一步定义了3个新的NALu类型,第一个类型是载荷内容尺度信息PACSI NALu,用于提供RTP包中包含数据的尺度信息总结,以及其他辅助信息如CS-DON值.第2个类型和第3个是空NALu和非交错多时聚合包NI-MTAP NALu,空包用于保证MST中解码顺序恢复需要的协议内的时间戳对齐.NI-MTAP用于作为新的载荷结构,允许解码顺序上不同时间情况NALu组.更多细节在1.2.3节.

本备忘还定义了RTP上的SVC传输的信令支持,包括新的媒体子类型名称(H264-SVC)

剩下本节提供了一个不规范的SVC编码器和载荷的概述.

1.1SVC编码器
1.1.1概述
SVC定义了一个编码的视频代表,给定的比特流提供了源材料作为不同层的精确度.(也就是伸缩性,尺度的意思).SVC视频编码比特流或者伸缩比特流是金字塔结构的.编码过程从底层组建分层的提升精确度.

SVC提供的精确度的维,有空间的(图像大小),质量的(信噪比SNR),时间的(帧率).特定空间,质量,时间的比特流可以通过一个对应的参数确定:dependency_id,quality_id,temproal_id(详见1.1.3).精确度标志位整数值,越大的值代表越高的层级.注意的是SVC提供了显著的复杂度按照一个编码器如何选择不同组件的依赖结构.解码特定的组件需要它所直接或者间接依赖的所有组件.一个SVC比特流的操作点由解码的3个参数组合决定.

层,在本备忘中用于不同的上下文.例如,视频编码层和网络精简层,是组织层次上的概念.当指向比特流的语法元素,例如块层,宏块层,指的是层次比特流结构的层次,当用于比特流的伸缩性的时候,例如AVC基本层,指的是原信令的一个表现精度.精确的解释需要近似的上下文.

SVC维持了H.264/AVC的比特流结构.特别的所有比特流部件都封装在NALu中,NALu组织为AU.一个AU关联到时间上的一个采样时间.NAL类型的子集一致与VCL(视频编码层).包含了源内容的编码图像数据.非VCL的NALu包含了用于解码的辅助的数据.例如参数集信息.或者促进确定系统操作,但是不是解码过程中必须的内容.不同精确度的编码图像数据组织为slice片.在一个AU中,一个编码图书操作点包含了所有的编码片,解码特定组合层级参数的内容.

注意的是,时间伸缩的概念在H.264/AVC中已经有了.作为附录A中的内容支持.特别的在H.264/AVC中,子序列的概念引入允许可选的时间伸缩通过SEI消息.SVC扩展了这种方式,通过temporal_id,和dependency_id,quality_id一起.对于H.264附录G中定义的编码图像数据,这个可以通过使用新的NALu类型来完成.也就是尺度扩展NALu(类型为20).精确度参数是它的头信息的一部分.对于符合H.264/AVC的编码图像数据,确保兼容于现在的H.264/AVC解码器,又定义了一个新的NALu,前缀NALu(类型14),来定义包含这种头信息.SVC额外的第3个NALu是子集SPS NALu(类型15),包含了SPS信息对于治疗和空间增强层.所有的这些3个新的NALu是H.264/AVC保留的,对于遵守H.264/AVC附录A的将会直接忽视.

在AU中,VCL NALu关联到特定的dependency_id和quality_id都作为"层表现".

1.2.2传输模式和打包模式
本备忘允许以SST和MST打包.在SST下,所有的SVC数据在同一个RTP会话中,在MST下,两个或者多个RTP会话用于负载SVC数据,MST模式基于rfc6184的内容.MST中,每个RTP会话都关联到一个RTP流,每个含有一个或者多个层.
设计上,基础层兼容H.264/avc.在传输过程中,关联的前缀NALu,(SVC引入的)出现的时候,AVC解码器忽视.前缀NALu可能够封装在同一个RTP包流中(作为VCL NALu),或者在不同的RTP流中(当使用MST时候).为了方便,不含有前缀NALu的基础层称为AVC基础层,含有前缀NALu的基础层,称为SVC基础层.
进一步的,基础才呢过可能有多个时间组件(支持不同的帧率).这样AVC或者SVC基础层最低的时间组件(T0),作为SVC比特流层级的起始点.
本备忘允许对给定的RTP流进行下面3中层组合方式:
1,只有T0 AVC基础层或者T0SVC基础层
2,只有一个或者多个增强层
3,T0SVC基础层和一个或者多个增强层
SST用于点对点的单播应用,一般情况下,

5,封包过程
RFC6184应用到本备忘,以下为附加内容
5.1,单会话传输
所有接收器必须支持单NALu封包模式,来提供对于RFC6184的后向兼容性,然后使用单NALU模式(packetization-mode为0)应用尽可能避免,应为他们的NALu包都很小.(例如包含参数集,前缀NALu,SEI信息)使得包头较多,效率较低.
所有的接收器必须支持非交错模式.
     备忘:todo
一个较小的NALu应用封在聚合包和其他一个或多个NALu.例如非VCL
NALu例如AU分隔符,参数集,SEI是典型的小NALu.
前缀NALu和它关联的NALu(解码顺序在前缀NALu后面的),应该包含在同样的聚合NALu中.除非这会违反会话的MTU限制,或者分段单元用于关联NALu了.
     备忘:
     尽管前缀NALu会被AVC解码器忽视,但是对于SVC解码过程是必须的.对于较小前缀NALu最好与其关联NALu在同一个RTP包中.
当只有AVC子集兼容的SVC基层传输在一个RTP会话中g,子集必须按照RFC6184封装,这样RFC6184接收器就可以接受AVC子集兼容比特流.
当一系列层,包括SVC增强层传输在一个RTP会话中时,集合应该按照本备忘封装.
5.2多会话传输封包
当使用MST时候,封包规则5.1依旧适用.另外下面的规则必须遵守,为了确保NALu的解码顺序可以从每个MST打包模式下恢复出来.
NI-T和NI-TC模式都使用时间戳来恢复解包顺序.为了确保能够如此,对于跟定的RTP回话RTP数据流携带所有的采样实例.???NI-C和I-C模式没有这个限制,使用CS-DON值可以作为明确的解码顺序指示,直接编码在PACSI NALu中或者通过打包规则告知.注意的是,NI-TC模式同时提供两个方法,由接收器决定使用哪一个.
5.2.1NI-T/NI-TC封包规则
当使用NI-T模式时,PACSI NALu出现,T必须设为0.DONC域一定不出现.
当使用NI-T模式时,可选的sprop-mst-remux-buf-size,sprop-remux-buf-req,remux-buf-cap,spro-remux-init-buf-time,sprop-mst-max-don-diff一定不出现.
当使用NI-T模式或者NI-TC模式,应用如下规则:
     如果一个采样时间的AU的一个或者多个NALu出现在RTP会话A中,那么同样AU的一个或者多个NALu必须出现在依赖RTP会话A的任何增强RTP会话中.
     备忘:todo
     如果为了满足上述规则,一个包必须插入,例如...,插入的包必须有时间戳,该时间戳映射到和任何低层的RTP回话或者基础会话中出现的AU的任意包的其中任一个RTP时间戳,同样的wall-clcok时间(NTP格式).这很容易完成如果NALu或者包可以在RTP流生成过程.因为媒体的时间戳NTP,插入的包和定位的AU的时间戳相同.如果RTP流生成没有媒体时间信息或者如果RTP流生成不是在同一个实例中,也可以在之后的传输过程中实现.这种情况下,可以通过下面的方法计算插入数据包的NTP时间.
....[计算方法]
5.2.2 NI-C/NI-TC模式封包规则

应用示例
svc的概念起源于mpeg2编码,可以追溯到1993年.然而始终没有得到广泛接受,
[下面关于层级多播,流化,视频会议,移动电视,的应用场景.]
}}}
