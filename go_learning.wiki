 = go =
 
 这个曾经学过,后来,也没有再次深入.

 还是有一些不错的特性的.

 如果是后台编程,并且对性能,部署,开发有一定的要求,可以考虑通过这个实现.
 
[[golang_design]]

== 格式 ==
go语言的语法是严格要求形式的.(和python有点像)

但是要求更多更细.

例如函数最后的{,是要必须跟随在函数之后的,不可以随意的重新起一行

甚至工程的目录约定都是必须的....

== 工具链 ==
go run XXX.go

go install
编译出可执行程序,(默认以路径名称为可执行程序的名称)

关于工具链以及格式的细节要求,参见[[http://golang.org/doc/code.html]],这个说的非常详细
