= naming =
This page for non-native English speaker as me showing how to naming in
programming.
== queue for producer-consumer ==
- dequeue
- enqueue
- acquire
- release
`I love these terms, vast and of equal length.`

== struct, st ==
- list, array, queue, stack
- linked-list
- tuple, record
- lookup table, lut, hash table, tbl, tab
- set
- tree
- dict, map, assoc, associated array
- heap
- counter, cnt

- node, listnode, treenode

=== queue / stack / linked-list ===
- stack, stk,
- queue, que, q, Q
- list, lst, ls
- link, next, prev

- queue, chain
- list

- head, tail
- dequeue / deque (pronounced "deck")
- put
- get

- pushback
- append
- pop
- top

- extend
- concat

- peek (retrieve head of list)
- pool (retrieve and remove head of list)

- full
- empty, isEmpty
- push
- pop

- null, nil

- bound, unbounded
- thresh, threshold

- start
- stop, halt, halting
- suspend, resume
- freeze, unfreeze
- standby

- begin
- end
- bgn/end
- top/bot

- head
- tail
- front
- rear

- upper
- lower
- middle
- bottom, up

- previous, next
- predecessor, successor, succeeding
- subsequent
- front, back
- before, after, afterward, forward, backward

- compatible

- range
- interval
- step

- rank

- size
- length
- capacity
- fullness, depth

- find
- index

- trim
- strip
- truncate

- rotate
- reverse
- inverse
- traverse, traversal, walk

=== blocking queue ===
- take (block when queue is empty)
- put(block when queue is full)
- posion pill/ EOS
notify end of stream

== array ==
- add, remove
- attach, detach
- column, row

=== 2D-array ===
- grid
- lattice
== object ==

- object, instance, handle, subject

- init
- deinit / finit
- create
- destroy
- open
- close
- construct, destruct
- ctor, dtor

- die
- trap
- exit
- quit
- bye
- terminate

== functional programming ==
- map
- filter
- fold
- reduce

== file system ==
- file
- directory
- folder
- path
- basename

== decoder ==
- emptyThisBuffer
- fillThisBuffer

== status ==
- loaded
- idle
- run / executing
- pause
- stop

- state: submit/apply change

== set ==
- issubset
- issuperset
- union
- intersection, intersect
- difference
- symmetric_difference

- symmetric, asysmetric
- intuitive

== memory ==
- alloc / allocate / deallocate
- malloc
- realloc
- calloc
- free, dispose
- new, delete
- shrink

- release
- discard

- import
- export

- ref
- unref

== producer / consumer / message ==
- send / snd
- receive / recv / rcv
- acknowledge / ack
- write
- read
- publish
- subscribe
- broadcast

== hearbeat / timer ==
- tic
- toc
- beat
- elapse
- bip/bop

= currency =
- money
- salary
- package

== concurrent ==
- parllel
- concurrently, simultaneously
- synchronous, sync,
- same time

== mutex / seamphore / cond ==
- lock / unlock
- race condition
- concurent, parallel

== IO ==
- print
- scan
- get
- put
- show, stringfy, toString, pretty
- illustrate

== file operation ==
- seek
- tell
- rewind
== callback ==
- register
- unregister
- notify
== struct ==
- head / header / hdr
- body
- section
- tag
- attribute / attr

- probe
- query
- inquiry
- get

== data type ==
- atom / atomic, primitive
- interval / range
- enumeration / enum / enumerate, struct, union
- itemization(racket) / Maybe(haskell)
- compound (consist of two or more itema that naturally belong together)
- composed (naturally composed of diferent parts)
- reference
- self-reference
- dereference

== search ==
- haystack
- needle

== namesapce ==
- module
- package
- static
- public , private , protected
- share
- extern , external
- internal, innard
- import, export, reveal, expose
- prototypes, interface, implementation, representation
- declare, declaration
- right, own, owner, privilege, enforce, permissive

- check, chk
- unchecked runtime error, checked runtime error, exception
- exception: try, catch, raise
- diag, Diagnostic, debug

- convention, convent
- specify
- implicitly, implicit, explicit
- pollute, pollution
- dependent, independent,
- opaque, hide, hidden
- transparent

- eval, repr
- static, dynamic

- client, cl, server, srv

== server name ==
- app
- sql
- ftp
- mta       mail server
- dns
- cfg
- mon       monitoring server
- prx       proxy
- ssh
- sto       storage server
- vcs       version control software
- vmm       virtual machine manager
- web
- con       console/terminal server
- fwl       firewall
- lbl       load balance
- rtr       L3 rounter
- swt       L2 switch
- vpn
- pdu       power distribution unit
- ups       uninterruptible power supply

- function, routine, procedure, chunk
- macro
== abbr, abbreviate ==
- function
func, fcn, fn, f
- index
idx, i
- return
rtn, ret, rt, r
- building
BLDN

- config
- setting
- option
- param parameter
- arguement
- property
- perference
- factor

== network ==
- playload
- overhead
- header / body

== GUI ==
- button
- check box
- combo box
- dialog box
- option box
- toolbar
- scroll bar
- progress bar
- text area
- mouse
- keyboard
- tooltip
- ballon tip
- form
- table
- status line / status bar

- container
- pane
- panel
- grid
- div
- anchor point

- text
- icon
- image / figure

- title
- caption
- label

- desktop
- window
    - pop-up window
    - message box
- menu
- clipboard

=== GUI action ===
- action, act, actor
- hover
- click
- double-click
- hold
- drag
- select
- choose
- jump

- shortcut
- accelerator key
== font ==
- glyph
- anti-alias
- hint, hintfull

== VCS ==
- feature/feat
- fix
- docs
- style
- refactor/refine
- test
- chore

- branch, bookmark, tag, commit, CL, pull request

== order ==
- ascending order
- non-descending order
- monotone / monotonically increasing
- total-ordering

- alignment
- padding
- margin

- swap
- exchange/exch

== char/symbol ==

ref: https://www.douban.com/group/topic/12410327/

| symbol | name                         |
| !      | exclamation mark, bang       |
| ?      | question mark                |
| ,      | comma                        |
| .      | dot, period, point           |
| :      | colon                        |
| ;      | semicolon                    |
| \"     | quotation mark, double quote |
| \'     | apostrophe, single quote     |
| \`     | backquote, grave accent      |
| *      | asterisk, star               |
| +      | plus sign                    |
| -      | hyphen, dash, minus sign     |
| =      | equal sign                   |
| /      | slash                        |
| \\     | backslash                    |
| _      | underline, underscore        |
| $      | dollar sign                  |
| @      | at sign                      |
| #      | crosshatch, sharp, hash      |
| %      | percent sign, mod            |
| &      | and, ampersand               |
| ^      | circumflex, caret            |
| {}     | brace                        |
| []     | bracket                      |
| ()     | parentheses                  |
| <>     | angle bracket                |
| <      | less than                    |
| >      | greater than                 |
| ' '    | whitespace, space            |
| '\n'   | newline, line feed, LF       |
| '\r'   | carriage return, CR, return  |

- EOL: end of line
- EOF: end of file
- EOS: end of stream

{{{
    bar, pipe, vertical bar
}}}

- utf
- ascii
- Alphabetical order, alphabet

- alpha
- beta
- gamma
- delta
- epsilon
- zeta
- eta
- theta
- iota
- kappa
- lambda
- my
- ny
- xi
- omicron
- pi
- rho
- sigma
- ypsilon
- phi
- chi
- psi
- omega

- magnify
- zoom in/zoom out

== static program analysis ==
- dead store

== direction / orientation ==
- down/up
- left/right
- horizontal
- vertical, 竖直
- diagonal
- slash
- backslash
- orthogonal,  正交
- portrait
- landscape

- width
- height
- stride

== shape ==
- point
- segment / line / interval
- triangle
- rectangle
- circle
- eclipse
- curve

- draw

- cone

- area
- volume

- desecrate
- coordinate

- origin
- vector

== pointer ==
- cursor
- loitering
- guard/sentinel/sentry
- defense, defensive, offensive

- dangling pointer
- heuristic

== binary ==
- byte / octet
- bit

== effect ==
- mosaic
- blink
- judder
- artifact
- stutter
- stavation
- lipsync
- saw-teeth
- latency

- trivial

== number ==
- single
- dual, double
- triple

- half
- quarter

== video ==
- caption / subtitle, title
- descriptor

- luma, intensity
- chroma
- HDR, SDR

== OS ==
- process
- thread
- context, ctx
== operator ==
- commutative
- binary, unary

- two's complement
- complement 补集

== encrypt ==
- tamper
- resistant

== graph / gfx ==
- surface
- overlay
- lock/unlock
- vertex
- shader
- texture
- rasterization
- framebuffer, fb

== mail ==
- OOO out of office
- ETA estimate time of arrival
- FYI for your information
- PLS please
- ASAP as soon as possible
- IMHO In my humble opinion
- ToT Top of Tree
- EOD End of Day

- estimate
- misc miscellaneous
- cache
- quota

== number ==
- integer
- rational

== math ==
=== mather ===
- abel
- euler

- palindromic
- proportional, direct ratio
- penalty

- quadratic

- cleanup

- main
- auxiliary, dummy
- placeholder
- reserve, reserved, rsvd, rsv
- var, variable

- The quick brown fox jumps over the lazy dog
- 我能吞下玻璃而不伤身体

- coupling 耦合
- conflict, collision

- coach, train

- pitfall

=== arith ===
- add, addition, plus
- minus, substract, SUB
- multiply, MUL
- divide, division, DIV
- quotient, modular, mod, remainder, quot
- operator, operand
- argument
- minimum, maximum
- ceil, ceiling, floor, round
- sign, abs
- even, evenly, odd

- consistent, adhere
- relate, relation, relationship
- involve

- repeat, replicate

- bonus
- thank, thx
- trade-off

- fail, final, end, bailout

- lower, upper, vowel 元音

== log level ==
- die
- panic
- fatal
- error
- warning
- info
- high, mid, low
- usr, user

== Book ==
| CII   | C Implementation and Interface                     |
| CLRS  | Introduction to Algorithms                         |
| CSAPP |                                                    |
| TAOCP | The art of Computer Programming                    |
| SICP  | Structure and Interpretation of Computer Programms |
| HtDP  | How to Design Programs                             |

- group, bundle

- alternative

== language ==
- CFG: context free grammar
- BNF: BackusNaur Form
- RPN: reverse polish ??
- Ambiguity 二义性
- keyword
- identifier
- token, symbol
- lexical analsis, scaning
- lexical analyzer
- syntax analysis, parsing
- regex, regular expression
- finitre automation
- GLR: generalized Left to Right
- LALR: Look Ahead Left to Right
- lookahead
- grammer
- syntax
- semantic
- nonterminal
- pattern
- rule
- precedence

- compiler
- preprocesser
- linker
- loader
- interpreter

- shift

- book
- paper
- specification
- amendment
